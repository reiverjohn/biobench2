V. 0.7.13
- m64 flag for Sparc/Solaris computing
- Color space makefile
- Crashing parsing bug
- Crashing initialisation bug
- No more stuttering of tandem repeats after Pebble resolution

V 0.7.14
- Crashing bug in long read concatenation

V 0.7.15
- Tiny colorspace bug in sequence expander
- Crashing bug in Pebble pointers

V 0.7.16
- Bug in AMOS output
- Crashing bug in file parsing
- Infinite loop in scaffolding

V 0.7.17
- Bug in colorspace compilation
- Bug in library indexing

V 0.7.18
- Bug in asmbly_splitter.pl script
- Bug in fastq parsing

V 0.7.19
- Bug in colorspace graph construction
- Removed useless output in PreGraph file
- Bug in long read resolution
- Useless tables removed
- Bug in long read / paired-end read resolution

V 0.7.20
- Bug in AMOS output of long reads

V 0.7.21
- Added manual TeX source code

V 0.7.22
- Corrected offset error of short reads in AMOS output

V 0.7.23
- Corrected list ordering bug which produced polyA chains and crashed the AMOS output

V 0.7.24
- Corrected the OCov tracking in RockBand
- Removed the use of long reads to determine uniqueness
- Various missassembly and crashing bugs in RockBand (long read repeat resolution)

V 0.7.25
- Added total assembly length count
- Crashing bug in long read repeat resolution
- Updated documentation to include colorspace use of Velvet

V 0.7.26
- Added read-pair error correction test to reduce misassemblies

V 0.7.27
- Corrected bug in colorspace hashing

V 0.7.28
- Uncaught memory exception patched
- Warning message in the absence of expected coverage
- Modifiable long read multiplicity cutoff

V 0.7.29
- Crashing bug when scaffolding

V 0.7.30 
- Read numbering bug in AMOS file

V 0.7.31
- Read numbering bug in AMOS file (1-indexing)
- Marginal memory leaks
- Updated manual

V 0.7.32
- Crashing bug
- Bug in AMOS format output
- Memory allocation checks
- Rearranged shuffling scripts
- Homogenised local TourBus to use the same params as normal TB

V 0.7.33
- Bug in Makefile

V 0.7.34
- Added number of reads used in contigs to final stats
- Yet another bug in AMOS indexing
- Final stats line conserved in log file
- Optional scaffolding
- Multiple rounds of Pebble to allow for very different insert lengths

V 0.7.35
- Patched acceleration table bug (John Marshall)
- Corrected error messages (John Marshall)
- Crashing bug when using -cov_cutoff
- --help option
- Small formatting change to error messages

V 0.7.36
- K > 31 now possible
- --help option corrected for velvetg

V 0.7.37
- Acceleration of k-mer operations (comparable to 64bit int performance)
- Fixed variable lengths
- Reordered struct declaration for more efficent memory alignment

V 0.7.38
- Typo in kmer.c
- Updated documentation
- In git release, Makefile now compiles documentation
- Stream option
- Original read names in Sequences file
- Updated MAQ parser.
- Added Simon Gladman's VelvetOptimiser script in the third-party repository

V 0.7.39
- Added Torsten Seemans's estimate-exp_cov script
- Amended Makefile to compile Manual
- Moved code contributions to the eponymous ./contrib directory

V 0.7.40
- Amended Makefile to help changing compilation time parameters
- Amended Makefile to integrate documentation compilation
- Corrected crashing bug in parsing

V 0.7.41
- Corrected use of multiple libraries

V 0.7.42
- Removed some minor memory leaks
- Corrected the parsing of FastA files (crashing bug)
- Added exception catchers for file reading

V 0.7.43 
- Added more exception catchers for file reading
- Corrected parsers to allow long sequence names (crashing bug)
- Inserted millions of casts to correct printf and scanf variable size inconsistency errors
- Corrected bug in hashing associate to different max. kmer lengths

V 0.7.44
- Corrected parameter parser for -ins_length_long and -ins_length_long_sd
- Exits more gracefully when presented with an empty dataset

V 0.7.45
- Crashing and parsing bug when piping zipped files
- Updated Eland parser

V 0.7.46
- Filetype checker to avoid confusion between FastA and FastQ
- Corrected asmbly_splitter script to handle scaffolds better

V 0.7.47
- Small bug in splay.c
- Small bug in graphReconstruction.c
- Added guide to contrib directory and within the Manual

V 0.7.48
- Accelerated concatenation (pre-graph and graph)
- Unlimited contig size
- Bug in parsing FASTA files with very long lines
- Parsing bug in snp_view.pl script

V 0.7.49
- Added the optional output of unused reads
- Added David Studholme's FastA -> AGP script

V 0.7.50
- Added the extractContigReads script
- Updated the FastA -> AGP script
- Added the observed-insert-length script
- Small parsing bug in simplified read import

V 0.7.51 
- Small parsing bug
- Correction to the observed-insert-length script
- Verified strncpy calls
- NCBI friendly 10bp N-gaps

V 0.7.52
- Crashing bug when parsing fa.gz files
- Crashing bug with tiny Graph files
- Bug when loading FASTA files with short lines
- Corrected snp_view.pl script to write reverse strand reads in snp_view_reads file
- Corrected snp_view.pl script to behave better near the edges of contigs
- Updated observed_insert_length to compute the standard deviation of the set
- Corrected observed_insert_length script so that it does not crash on empty libraries
- Crashing bug when providing an odd number of paired reads
- Mapping bug of reads during tour bus correction

V 0.7.53
- Ignored reads in Pebble corrected
- Added automatic measure of median coverage and median insert length
- Updated manual to cover the above

V 0.7.54
- Corrected insert length variance estimate bugs
- Corrected observed-insert_length script for warning message
- Added an extra error detection filter in Pebble
- Prevented divergence of distance estimates in Pebble
 
V 0.7.55
- Applied Jonathan Hoser's patch to the VelvetOptimiser script
- Parsing bug in extractContigReads.pl
- Updated the FASTA read shuffling script
- Updated the Manual
- Implemented strand specific sequencing
- Parsing bug of the Sequences file
- Added sequence shuffling scripts

V 0.7.56
- Amended contrib files for Debian release  
- Amended inline function for C99 compatibility
- Crashing NULL pointer bug
- Bug in shuffling script
- Updated VelvetOptimiser
- Added Ken Doig's show_repeats script
- Bug in estimated coverage
- Bug in reading sequence lengths
- Rounding error in scaffolding

V 0.7.57
- Added document compilation to the README file
- Patched the VelvetOptimiser copy
- Added read count in stats file

V 0.7.58
- Modified to asmbly_splitter script to conserve pairing information
- Modified the Makefile to make the compilation of Oases safer

V 0.7.59
- Correction to the asmbly_splitter script
- Correction to the zipped file reading
 
V 0.7.60
- Amended Makefile for colorspace Oases users
- Measured coverage is printed in log file

V 0.7.61
- Amended the extractContigReads script to produce correct fasta files
- Corrected graph2.py file for python call
- Synchronised some scripts on the git which were outdated
- Corrected bug regarding paired strand specific RNA sequencing
- Integrated SAM/BAM parser functions
- Corrected bug which created extremely long poly-A stretches in scaffolding
- Corrected the insert length estimateion for stability
- Added a sanity check for FastA reader

V 0.7.62
- Corrected crashing bug when hitting exception in insert length estimation

V 0.7.63
- Added the AssemblyAssembler by Jacob Crawford
- Increased the memory allocated to store gap sizes to avoid overflow errors with long insert libraries

V 1.0.01
- Columbus hybrid assembly module

V 1.0.02
- Crashing bug with empty graphs
- Compilation bug in kmer.c
- Bug in short mapped read offsets

V 1.0.03
- Updated VelvetOptimiser code
- Compilation error for colorspace Oases

V 1.0.04
- Crashing bug with reads shorter than hash length
- Colorspace SAM/BAM parser
- Crashing bug when uploading empty (Pre)Graphs
- Bug in correctedGraph.c
- Automatic abort in debug mode

V 1.0.05
- Re-set v0.7.63 change which had been accidently undone
- Prevent reference sequences from being used in Pebble

V 1.0.06
- gnu99 compilation warnings
- Raw(.gz) read parsers
- Crashing bug at specific MAXKMERLENGTH/kmer combinations
- Memory optimisation by Sylvain Foret

V 1.0.07
- Double free in destroyReadSet
- Memory leak of PreMarker arrays

V 1.0.08
- TourBus exhaustiveness bug
- Crashing memory corruption bug

V 1.0.09
- Strand specific transmission

V 1.0.10
- Do not map unmapped reads in SAM/BAM file.
- Crashing parsing bug when mixing long and short reads.
- Updated AssemblyAssembler (now v. 1.2)

V 1.0.11
- Prettyfied online help message
- Prettyfied contig output for long k-mer values
- Corrected AssemblyAssembler shebang
- Updated VelvetOptimiser

V 1.0.12
- Crashing bug when reconstructing the graph with no reference sequences
- Avoid reading Roadmap file when unnecessary in graph reconstruction (cf. previous bug fix)
- VelvetOptimiser update
- Compiler warning in allocArray

V 1.0.13
- Bug for polyA induced homologies in Columbus
- Added select_paired.pl script
- Updated AssemblyAssembler script
- Long read coverage cutoff
- Reporting of contigs filtered out by the coverage cutoffs

V 1.0.14
- Reintroduced timed stdout messages
- Extended explanation of k-mer lengths in manual
- Catch failures in writing to files
- Permission exceptions 
- Pointer arithmetic warning
- Casting warning
- Infinite loop with read coherency
- Out of bounds bug for very long reads
- -clean and -very_clean options

V 1.0.15
- Updated manual
- Corrected help message
- Big assembly option
- Long sequences options

V 1.0.16
- Multiple k-mer hashing
- Sequences file reuse
- Sequences data reuse 
- Memory corruption bug
- Sequences file no longer deleted with -clean option but -very_clean

V 1.0.17
- Reverted working directory name in case of single k-mer mode
- Bugs in multiple k-mer iteration
- Correction of online help message

V 1.0.18
- Consistency of hairpin arc multiplicity
- Bug in reuse_Sequences option
- Bug strand_specific option

V 1.0.19
- -noHash option
- Solaris files added
- Bug in coverage cutoff
- Removal of the layout script

V 1.1.01
- OMP multi-threading
- MetaVelvet

V 1.1.02
- Corrected MetaVelvet Makefile
- Reverted untested code
- Updated Manual

V 1.1.03
- Help message displays all compilation settings
- Updated Manual on OPENMP
- Crashing bug in run2
- Makefile error in bundled MetaVelvet
- Bug in Columbus mappings
- Merged in Sylvain's changes
- Improved the allocation of blocks in allocArray

V 1.1.04
- Compilation problems for k < 32
- Total node count provided in tour bus
- Log is not squashed by velveth if pre-existing
- Manual typo
- Pairing bug
- Node sequence export bug

V 1.1.05
- Log file now contains compilation and version info
- timersub macro
- POSIX compliance in Makefile
- OPENMP compilation tags standardized
- Offset bug in Columbus

V 1.1.06
- Corrected manual regarding multiple k-mer use
- Corrected bugs in multiple k-mer user
- Corrected bugs in Columbus (off-by-1, long read tracking)
- Added coverage masks
- Added gap mask in Columbus
- Offsets used in kmerOccurenceTable to accelerate searches
- Some memory leaks

V 1.1.07
- Concurrency issues in Columbus
- Pairing bug for odd number of reads
- Variable size in reading sequence lengths
- Ubuntu patch to Makefile

V 1.1.08
- Negative marker bug in TourBus
- Better reading of SAM/BAM files
- Added conserveLong option

V 1.2.01
- David Soper's create_binary option

V 1.2.02
- Strict Columbus
- Recast SAM/BAM parser for pattern structure
- David Soper changes to conserve reference masking of gaps
- David Soper changes to store multiple mappings per sequence

V 1.2.03
- Comments in FastA headers are now discarded
- Print reference mapping stats, and optional warning
- Updated some warning printouts

V 1.2.04
- Crashing bugs linked to empty readsets.
- Realloc bug when a read has more then 20 mappings.

V 1.2.05
- Scrubbing comments out of FastQ read names
- Bug in multiple k-mer settings when kmax is equal to MAXKMERLENGTH
- Bug when parsing parameters for multiple length k-mers

V 1.2.06
- Added test framework
- Added option '-separate' to allow reading paired reads from 2 separate files

V 1.2.07
- Add file format option '-fmtAuto' to auto-detect compression (using gunzip/bunzip2) and format (only FastA or FastQ for now)
- Updated MetaVelvet
- Bug in unit testing
- Compilation bug
- Memory corruption when running multiple k-mers

V 1.2.08
- Bug in multi-kmer Columbus reference masks

V 1.2.09
- Bug in copying read mappings into Sequences file

V 1.2.10
- Bug in multi k-mer run
- Addition of contributed 'read_prepare' script
- Better detection of out-of-bounds error
